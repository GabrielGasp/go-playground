// Code generated by mockery v2.43.2. DO NOT EDIT.

package io

import mock "github.com/stretchr/testify/mock"

// MockByteWriter is an autogenerated mock type for the ByteWriter type
type MockByteWriter struct {
	mock.Mock
}

type MockByteWriter_Expecter struct {
	mock *mock.Mock
}

func (_m *MockByteWriter) EXPECT() *MockByteWriter_Expecter {
	return &MockByteWriter_Expecter{mock: &_m.Mock}
}

// WriteByte provides a mock function with given fields: c
func (_m *MockByteWriter) WriteByte(c byte) error {
	ret := _m.Called(c)

	if len(ret) == 0 {
		panic("no return value specified for WriteByte")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(byte) error); ok {
		r0 = rf(c)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MockByteWriter_WriteByte_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'WriteByte'
type MockByteWriter_WriteByte_Call struct {
	*mock.Call
}

// WriteByte is a helper method to define mock.On call
//   - c byte
func (_e *MockByteWriter_Expecter) WriteByte(c interface{}) *MockByteWriter_WriteByte_Call {
	return &MockByteWriter_WriteByte_Call{Call: _e.mock.On("WriteByte", c)}
}

func (_c *MockByteWriter_WriteByte_Call) Run(run func(c byte)) *MockByteWriter_WriteByte_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(byte))
	})
	return _c
}

func (_c *MockByteWriter_WriteByte_Call) Return(_a0 error) *MockByteWriter_WriteByte_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockByteWriter_WriteByte_Call) RunAndReturn(run func(byte) error) *MockByteWriter_WriteByte_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockByteWriter creates a new instance of MockByteWriter. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockByteWriter(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockByteWriter {
	mock := &MockByteWriter{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
