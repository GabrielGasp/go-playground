// Code generated by MockGen. DO NOT EDIT.
// Source: repository/example_repository.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockExampleRepo is a mock of ExampleRepo interface.
type MockExampleRepo struct {
	ctrl     *gomock.Controller
	recorder *MockExampleRepoMockRecorder
}

// MockExampleRepoMockRecorder is the mock recorder for MockExampleRepo.
type MockExampleRepoMockRecorder struct {
	mock *MockExampleRepo
}

// NewMockExampleRepo creates a new mock instance.
func NewMockExampleRepo(ctrl *gomock.Controller) *MockExampleRepo {
	mock := &MockExampleRepo{ctrl: ctrl}
	mock.recorder = &MockExampleRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockExampleRepo) EXPECT() *MockExampleRepoMockRecorder {
	return m.recorder
}

// Do mocks base method.
func (m *MockExampleRepo) Do() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Do")
	ret0, _ := ret[0].(error)
	return ret0
}

// Do indicates an expected call of Do.
func (mr *MockExampleRepoMockRecorder) Do() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Do", reflect.TypeOf((*MockExampleRepo)(nil).Do))
}
